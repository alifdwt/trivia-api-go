// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "FbV9T@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/question": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Question"
                ],
                "summary": "Get All Questions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Question"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResult"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Question"
                ],
                "summary": "Create Question",
                "parameters": [
                    {
                        "description": "Create Question",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questionsdto.CreateQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Question"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResult"
                        }
                    }
                }
            }
        },
        "/question/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Question"
                ],
                "summary": "Get Question by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Question"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResult"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Question"
                ],
                "summary": "Update Question",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Question",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questionsdto.UpdateQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Question"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResult"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Question"
                ],
                "summary": "Delete Question",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Question"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ErrorResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "dto.SuccessResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {}
            }
        },
        "models.Question": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "John Doe"
                },
                "created_at": {
                    "type": "string",
                    "example": "2022-01-01 00:00:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "question": {
                    "type": "string",
                    "example": "What is your name?"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-01-01 00:00:00"
                },
                "wrong_answer_1": {
                    "type": "string",
                    "example": "Jane Doe"
                },
                "wrong_answer_2": {
                    "type": "string",
                    "example": "Jack Doe"
                },
                "wrong_answer_3": {
                    "type": "string",
                    "example": "Jill Doe"
                }
            }
        },
        "questionsdto.CreateQuestionRequest": {
            "type": "object",
            "required": [
                "answer",
                "question",
                "wrong_answer_1",
                "wrong_answer_2",
                "wrong_answer_3"
            ],
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "John Doe"
                },
                "question": {
                    "type": "string",
                    "example": "What is your name?"
                },
                "wrong_answer_1": {
                    "type": "string",
                    "example": "Jane Doe"
                },
                "wrong_answer_2": {
                    "type": "string",
                    "example": "Jack Doe"
                },
                "wrong_answer_3": {
                    "type": "string",
                    "example": "Jill Doe"
                }
            }
        },
        "questionsdto.UpdateQuestionRequest": {
            "type": "object",
            "required": [
                "answer",
                "question",
                "wrong_answer_1",
                "wrong_answer_2",
                "wrong_answer_3"
            ],
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "John Doe"
                },
                "question": {
                    "type": "string",
                    "example": "What is your name?"
                },
                "wrong_answer_1": {
                    "type": "string",
                    "example": "Jane Doe"
                },
                "wrong_answer_2": {
                    "type": "string",
                    "example": "Jack Doe"
                },
                "wrong_answer_3": {
                    "type": "string",
                    "example": "Jill Doe"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Trivia API",
	Description:      "API for Trivia",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
